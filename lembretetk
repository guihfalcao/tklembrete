import datetime
import tkinter as tk
from tkinter import messagebox

medicamentos = []

def calcular_dias_restantes_e_fim_estoque(quantidade, uso_diario):
    dias_restantes = quantidade // uso_diario
    hoje = datetime.date.today()
    data_fim_estoque = hoje + datetime.timedelta(days=dias_restantes)
    return dias_restantes, data_fim_estoque

def verificar_vencimento(data_vencimento):
    hoje = datetime.date.today()
    dias_vencimento = (data_vencimento - hoje).days
    if dias_vencimento <= 7:
        return f"Atenção: Sua receita vence em {dias_vencimento} dia(s)! Revalide com seu médico."
    else:
        return f"Receita válida por mais {dias_vencimento} dia(s)."

def adicionar_medicamento():
    try:
        nome = entry_nome.get()
        quantidade = int(entry_quantidade.get())
        uso_diario = int(entry_uso_diario.get())
        data_venc_input = entry_data_venc.get()
        data_vencimento = datetime.datetime.strptime(data_venc_input, "%d-%m-%Y").date()

        dias_restantes, data_fim_estoque = calcular_dias_restantes_e_fim_estoque(quantidade, uso_diario)
        vencimento_msg = verificar_vencimento(data_vencimento)

        medicamento = {
            "nome": nome,
            "quantidade": quantidade,
            "uso_diario": uso_diario,
            "data_vencimento": data_vencimento,
            "dias_restantes": dias_restantes,
            "data_fim_estoque": data_fim_estoque,
            "vencimento_msg": vencimento_msg
        }
        medicamentos.append(medicamento)

        mostrar_medicamentos()

        entry_nome.delete(0, tk.END)
        entry_quantidade.delete(0, tk.END)
        entry_uso_diario.delete(0, tk.END)
        entry_data_venc.delete(0, tk.END)

    except ValueError:
        messagebox.showerror("Erro", "Por favor, preencha os campos corretamente.\nFormato da data: DD-MM-AAAA")

def mostrar_medicamentos():
    text_resultado.delete(1.0, tk.END)
    for idx, med in enumerate(medicamentos, 1):
        resultado = f"\n[{idx}] Medicamento: {med['nome']}\n"
        resultado += f"- Estoque: {med['quantidade']} comprimido(s)\n"
        resultado += f"- Uso diário: {med['uso_diario']} comprimido(s)\n"
        resultado += f"- Dura por mais {med['dias_restantes']} dia(s)\n"
        resultado += f"- Fim estimado do estoque: {med['data_fim_estoque'].strftime('%d/%m/%Y')}\n"
        resultado += f"{med['vencimento_msg']}\n"

        if med['dias_restantes'] <= 5:
            resultado += "Alerta: Estoque baixo. Reabasteça em breve!\n"

        resultado += "Lembretes diários:\n"
        for dia in range(1, med['dias_restantes'] + 1):
            resultado += f"  Dia {dia}: Tomar {med['uso_diario']} comprimido(s) de '{med['nome']}'.\n"

        resultado += "-" * 40 + "\n"
        text_resultado.insert(tk.END, resultado)

janela = tk.Tk()
janela.title("Controle de Medicamentos")
janela.geometry("550x650")

tk.Label(janela, text="Nome do Medicamento:").pack()
entry_nome = tk.Entry(janela, width=40)
entry_nome.pack()

tk.Label(janela, text="Quantidade de Comprimidos:").pack()
entry_quantidade = tk.Entry(janela, width=40)
entry_quantidade.pack()

tk.Label(janela, text="Uso Diário (comprimidos por dia):").pack()
entry_uso_diario = tk.Entry(janela, width=40)
entry_uso_diario.pack()

tk.Label(janela, text="Data de Vencimento da Receita (DD-MM-AAAA):").pack()
entry_data_venc = tk.Entry(janela, width=40)
entry_data_venc.pack()

tk.Button(janela, text="Adicionar Medicamento", command=adicionar_medicamento).pack(pady=10)

text_resultado = tk.Text(janela, height=25, width=70)
text_resultado.pack()

janela.mainloop()
